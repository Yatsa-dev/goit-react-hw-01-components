{"version":3,"sources":["components/task-1/Profile.js","components/task-2/Statistics.js","components/task-3/FriendListItem.js","components/task-3/FriendList.js","components/task-4/TransactionHistory.js","App.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","src","alt","followers","views","likes","Statistics","title","map","stat","label","percentage","id","FriendListItem","isOnline","width","FriendList","friends","friend","status","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"suGAEe,SAASA,EAAT,GAA0D,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC7D,OACE,gCACE,gCACE,qBAAKC,IAAKL,EAAQM,IAAI,kHACtB,4BAAIL,IACJ,4BAAIC,IACJ,4BAAIC,OAEN,+BACE,+BACE,6CACA,+BAAOC,EAAMG,eAEf,+BACE,yCACA,+BAAOH,EAAMI,WAEf,+BACE,yCACA,+BAAOJ,EAAMK,iBCpBR,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOP,EAAS,EAATA,MAC1C,OACE,oCACGO,GAAS,6BAAKA,IACf,6BACGP,EAAMQ,KAAI,SAAAC,GAAI,OACb,+BACE,+BAAOA,EAAKC,QACZ,+BAAOD,EAAKE,eAFLF,EAAKG,YCPT,SAASC,EAAT,GAAqD,IAA3BjB,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMiB,EAAY,EAAZA,SACrD,OACE,+BACE,+BAAOA,IACP,qBAAKb,IAAKL,EAAQM,IAAI,SAASa,MAAM,OACrC,4BAAIlB,OCHK,SAASmB,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,OACE,6BACGA,EAAQT,KAAI,SAAAU,GAAM,OACjB,cAACL,EAAD,CAEEjB,OAAQsB,EAAOtB,OACfC,KAAMqB,EAAOrB,KACbsB,OAAQD,EAAOJ,UAHVI,EAAON,SCNP,SAASQ,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,kCACE,gCACE,+BACE,sCACA,wCACA,+CAGJ,gCACGA,EAAMb,KAAI,SAAAc,GAAI,OACb,+BACE,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,SACV,6BAAKF,EAAKG,aAHHH,EAAKV,Y,gCCcTc,MAjBf,WACE,OACE,gCACE,cAAC/B,EAAD,CACEC,OAAQ+B,EAAK/B,OACbC,KAAM8B,EAAK9B,KACXC,IAAK6B,EAAK7B,IACVC,SAAU4B,EAAK5B,SACfC,MAAO2B,EAAK3B,QAEd,cAACM,EAAD,CAAYC,MAAM,eAAeP,MAAO4B,IACxC,cAACZ,EAAD,CAAYC,QAASA,IACrB,cAACG,EAAD,CAAoBC,MAAOQ,QCjBjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.81a5553c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Profile({ avatar, name, tag, location, stats }) {\n  return (\n    <div>\n      <div>\n        <img src={avatar} alt=\"Аватар пользователя\" />\n        <p>{name}</p>\n        <p>{tag}</p>\n        <p>{location}</p>\n      </div>\n      <ul>\n        <li>\n          <span>Followers</span>\n          <span>{stats.followers}</span>\n        </li>\n        <li>\n          <span>Views</span>\n          <span>{stats.views}</span>\n        </li>\n        <li>\n          <span>Likes</span>\n          <span>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {stats.map(stat => (\n          <li key={stat.id}>\n            <span>{stat.label}</span>\n            <span>{stat.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li>\n      <span>{isOnline}</span>\n      <img src={avatar} alt=\"avatar\" width=\"48\" />\n      <p>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          status={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnLine: PropTypes.bool,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ),\n};\n","// import \"./App.css\";\nimport Profile from './components/task-1/Profile';\nimport Statistics from './components/task-2/Statistics';\nimport FriendList from './components/task-3/FriendList';\nimport TransactionHistory from './components/task-4/TransactionHistory';\n\nimport user from './API/user.json';\nimport statisticalData from './API/statistical-data.json';\nimport friends from './API/friends.json';\nimport transactions from './API/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","// import React from \"react\";\n// import \"./index.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}